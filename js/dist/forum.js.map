{"version":3,"file":"forum.js","mappings":";;;;;;;;;;;;;;;AAEA,iEAAe;EACbA,SAAS,EAAE;AACb,CAAC;;;;;;;;;;;;;;;;;;;;;ACJkC;AACS;AACiB;AACY;AAC1C;AAE/BC,oEAAgB,CAACM,GAAG,CAACF,+CAAM,CAACL,SAAS,EAAE,YAAM;EAC3CE,4DAAM,CAACC,sFAAoB,EAAE,cAAc,EAAE,UAAUM,KAAK,EAAE;IAAA,IAAAC,KAAA;IAC5D,IAAIT,kEAAY,CAACW,IAAI,CAACC,KAAK,CAACC,UAAU,IAAIb,kEAAY,CAACW,IAAI,CAACC,KAAK,CAACE,IAAI,EAAE;MACtEN,KAAK,CAACF,GAAG,CACP,aAAa,EACbS,CAAA,CAACZ,kFAAgB;QACfa,OAAO,EAAE,SAAAA,QAAA,EAAM;UACb,IAAMC,KAAK,GAAGR,KAAI,CAACG,KAAK,CAACF,QAAQ,CAACQ,MAAM,CAACC,iBAAiB,CAAC,CAAC;YAC1DC,UAAU,GAAGX,KAAI,CAACG,KAAK,CAACF,QAAQ,CAACQ,MAAM,CAACG,EAAE,CAACC,KAAK,CAACC,SAAS,CAACN,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC;UAChFO,OAAO,CAACC,GAAG,CAACR,KAAK,EAAEG,UAAU,CAAC;;UAE9B;UACAX,KAAI,CAACG,KAAK,CAACF,QAAQ,CAACQ,MAAM,CAACQ,aAAa,CAACT,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,WAASG,UAAU,UAAO,CAAC;UACtFX,KAAI,CAACG,KAAK,CAACF,QAAQ,CAACQ,MAAM,CAACS,YAAY,CAACV,KAAK,CAAC,CAAC,CAAC,GAAGG,UAAU,CAACQ,MAAM,GAAG,CAAC,CAAC;QAC3E,CAAE;QACFC,IAAI,EAAC;MAAoB,GAExB7B,kEAAc,CAAC+B,KAAK,CAAC,4DAA4D,CAClE,CACpB,CAAC;IACH;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;;;;;;;;;;;AC5BF;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACN6B","sources":["webpack://@imdong/flarum-ext-visible-to-op-only/./src/common/index.ts","webpack://@imdong/flarum-ext-visible-to-op-only/./src/forum/index.tsx","webpack://@imdong/flarum-ext-visible-to-op-only/external root \"flarum.core.compat['common/components/TextEditor']\"","webpack://@imdong/flarum-ext-visible-to-op-only/external root \"flarum.core.compat['common/components/TextEditorButton']\"","webpack://@imdong/flarum-ext-visible-to-op-only/external root \"flarum.core.compat['common/extend']\"","webpack://@imdong/flarum-ext-visible-to-op-only/external root \"flarum.core.compat['forum/app']\"","webpack://@imdong/flarum-ext-visible-to-op-only/webpack/bootstrap","webpack://@imdong/flarum-ext-visible-to-op-only/webpack/runtime/compat get default export","webpack://@imdong/flarum-ext-visible-to-op-only/webpack/runtime/define property getters","webpack://@imdong/flarum-ext-visible-to-op-only/webpack/runtime/hasOwnProperty shorthand","webpack://@imdong/flarum-ext-visible-to-op-only/webpack/runtime/make namespace object","webpack://@imdong/flarum-ext-visible-to-op-only/./forum.ts"],"sourcesContent":["import app from 'flarum/common/app';\n\nexport default {\n  extPrefix: 'imdong-visible-to-op-only'\n}\n","import app from 'flarum/forum/app';\nimport {extend} from \"flarum/common/extend\";\nimport TextEditor from \"flarum/common/components/TextEditor\";\nimport TextEditorButton from \"flarum/common/components/TextEditorButton\";\nimport common from \"../common\";\n\napp.initializers.add(common.extPrefix, () => {\n  extend(TextEditor.prototype, 'toolbarItems', function (items) {\n    if (app.composer.body.attrs.discussion || app.composer.body.attrs.post) {\n      items.add(\n        \"only-op-see\",\n        <TextEditorButton\n          onclick={() => {\n            const range = this.attrs.composer.editor.getSelectionRange(),\n              select_str = this.attrs.composer.editor.el.value.substring(range[0], range[1]);\n            console.log(range, select_str)\n\n            // 获取选中的内容\n            this.attrs.composer.editor.insertBetween(range[0], range[1], `[OP]${select_str}[/OP]`);\n            this.attrs.composer.editor.moveCursorTo(range[0] + select_str.length + 4);\n          }}\n          icon=\"fas fa-user-shield\"\n        >\n          {app.translator.trans(\"imdong-visible-to-op-only.forum.button_tooltip_only_op_see\")}\n        </TextEditorButton>\n      );\n    }\n  })\n});\n","module.exports = flarum.core.compat['common/components/TextEditor'];","module.exports = flarum.core.compat['common/components/TextEditorButton'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['forum/app'];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export * from './src/common';\nexport * from './src/forum';\n"],"names":["extPrefix","app","extend","TextEditor","TextEditorButton","common","initializers","add","prototype","items","_this","composer","body","attrs","discussion","post","m","onclick","range","editor","getSelectionRange","select_str","el","value","substring","console","log","insertBetween","moveCursorTo","length","icon","translator","trans"],"sourceRoot":""}